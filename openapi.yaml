openapi: 3.0.3
info:
  title: AKSV Volunteer Platform API
  version: 1.0.0
  description: API contract for Users (Volunteers) and Events resources on AKSV platform.

servers:
  - url: https://api.aksvplatform.com/v1

paths:
  /users:
    get:
      summary: Get list of users
      responses:
        "200":
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "500":
          $ref: "#/components/responses/InternalError"
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreateRequest"
      responses:
        "201":
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalError"

  /users/{userId}:
    get:
      summary: Get user by ID
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalError"
    put:
      summary: Update user by ID
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdateRequest"
      responses:
        "200":
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalError"
    delete:
      summary: Delete user by ID
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: User deleted successfully
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalError"

  /events:
    get:
      summary: Get list of events
      responses:
        "200":
          description: A list of events
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Event"
        "500":
          $ref: "#/components/responses/InternalError"
    post:
      summary: Create a new event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventCreateRequest"
      responses:
        "201":
          description: Event created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalError"

  /events/{eventId}:
    get:
      summary: Get event by ID
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Event details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalError"
    put:
      summary: Update event by ID
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventUpdateRequest"
      responses:
        "200":
          description: Event updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalError"
    delete:
      summary: Delete event by ID
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Event deleted successfully
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalError"

  /events/{eventId}/join:
    post:
      summary: Volunteer joins an event and selects time slots
      parameters:
        - name: eventId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventJoinRequest"
      responses:
        "200":
          description: Volunteer joined event successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventJoinResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          description: Conflict - time slot already taken
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          $ref: "#/components/responses/InternalError"

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          example: "user123"
        name:
          type: string
          example: "John Doe"
        email:
          type: string
          format: email
          example: "john.doe@example.com"
        phone:
          type: string
          example: "+1234567890"
      required:
        - id
        - name
        - email

    UserCreateRequest:
      type: object
      properties:
        name:
          type: string
          example: "John Doe"
        email:
          type: string
          format: email
          example: "john.doe@example.com"
        phone:
          type: string
          example: "+1234567890"
      required:
        - name
        - email

    UserUpdateRequest:
      type: object
      properties:
        name:
          type: string
          example: "John Doe"
        email:
          type: string
          format: email
          example: "john.doe@example.com"
        phone:
          type: string
          example: "+1234567890"

    Event:
      type: object
      properties:
        id:
          type: string
          example: "event123"
        title:
          type: string
          example: "Community Clean-up"
        description:
          type: string
          example: "Join us to clean the local park."
        date:
          type: string
          format: date
          example: "2024-07-01"
        timeSlots:
          type: array
          items:
            type: string
            example: "09:00-11:00"
      required:
        - id
        - title
        - date

    EventCreateRequest:
      type: object
      properties:
        title:
          type: string
          example: "Community Clean-up"
        description:
          type: string
          example: "Join us to clean the local park."
        date:
          type: string
          format: date
          example: "2024-07-01"
        timeSlots:
          type: array
          items:
            type: string
            example: "09:00-11:00"
      required:
        - title
        - date

    EventUpdateRequest:
      type: object
      properties:
        title:
          type: string
          example: "Community Clean-up"
        description:
          type: string
          example: "Join us to clean the local park."
        date:
          type: string
          format: date
          example: "2024-07-01"
        timeSlots:
          type: array
          items:
            type: string
            example: "09:00-11:00"

    EventJoinRequest:
      type: object
      properties:
        userId:
          type: string
          example: "user123"
        selectedTimeSlots:
          type: array
          items:
            type: string
            example: "09:00-11:00"
      required:
        - userId
        - selectedTimeSlots

    EventJoinResponse:
      type: object
      properties:
        message:
          type: string
          example: "Volunteer joined event successfully."
        eventId:
          type: string
          example: "event123"
        userId:
          type: string
          example: "user123"
        selectedTimeSlots:
          type: array
          items:
            type: string
            example: "09:00-11:00"

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: "Time slot already taken."

  responses:
    BadRequest:
      description: Bad request due to invalid input
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    InternalError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
